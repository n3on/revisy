###############################################################################
# Makefile automatically generated by Code::Blocks IDE                        #
###############################################################################

# Project:          OpenGL Application
# Project filename: F:\Projekte\impProjects\ReViSy\rvcs\x86\main\core\RVCS.cbp
# Compiler used:    GNU GCC Compiler

### Variables used in this Makefile
default_CC=mingw32-c++.exe
default_CPP=mingw32-g++.exe
default_LD=mingw32-g++.exe
default_LIB=ar.exe
default_RESCOMP=windres.exe
release_CC=mingw32-c++.exe
release_CPP=mingw32-g++.exe
release_LD=mingw32-g++.exe
release_LIB=ar.exe
release_RESCOMP=windres.exe
debug_CC=mingw32-c++.exe
debug_CPP=mingw32-g++.exe
debug_LD=mingw32-g++.exe
debug_LIB=ar.exe
debug_RESCOMP=windres.exe

### Compiler/linker options
default_GLOBAL_CFLAGS=
default_PROJECT_CFLAGS= -Wall
default_GLOBAL_LDFLAGS=
default_PROJECT_LDFLAGS=
default_GLOBAL_INCS= -IC:/Programme/development/SDL-1.2.11/lib -IC:/Programme/development/SDL-1.2.11/include -IC:/Programme/development/codeblocks/include -IC:/Programme/development/lua-5.1.1/lua-5.1.1/src
default_PROJECT_INCS= -I./x86/main -I../gfx_subsys -I../window_subsys
default_GLOBAL_LIBDIRS= -LC:/Programme/development/SDL-1.2.11/lib -LC:/Programme/development/codeblocks/lib -LC:/Programme/development/lua-5.1.1/lua-5.1.1/src
default_PROJECT_LIBDIRS=
default_GLOBAL_LIBS= C:\Programme\development\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\Lib\GlU32.Lib C:\Programme\development\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\Lib\OpenGL32.Lib
default_PROJECT_LIBS= -lopengl32 -lglu32 -lgdi32 -luser32 -lkernel32 C:\Programme\Microsoft Platform SDK\Lib\ComCtl32.Lib
release_GLOBAL_CFLAGS=
release_PROJECT_CFLAGS= -Wall
release_GLOBAL_LDFLAGS=
release_PROJECT_LDFLAGS=
release_GLOBAL_INCS= -IC:/Programme/development/SDL-1.2.11/lib -IC:/Programme/development/SDL-1.2.11/include -IC:/Programme/development/codeblocks/include -IC:/Programme/development/lua-5.1.1/lua-5.1.1/src
release_PROJECT_INCS= -I./x86/main -I../gfx_subsys -I../window_subsys
release_GLOBAL_LIBDIRS= -LC:/Programme/development/SDL-1.2.11/lib -LC:/Programme/development/codeblocks/lib -LC:/Programme/development/lua-5.1.1/lua-5.1.1/src
release_PROJECT_LIBDIRS=
release_GLOBAL_LIBS= C:\Programme\development\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\Lib\GlU32.Lib C:\Programme\development\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\Lib\OpenGL32.Lib
release_PROJECT_LIBS= -lopengl32 -lglu32 -lgdi32 -luser32 -lkernel32 C:\Programme\Microsoft Platform SDK\Lib\ComCtl32.Lib
debug_GLOBAL_CFLAGS=
debug_PROJECT_CFLAGS= -Wall
debug_GLOBAL_LDFLAGS=
debug_PROJECT_LDFLAGS=
debug_GLOBAL_INCS= -IC:/Programme/development/SDL-1.2.11/lib -IC:/Programme/development/SDL-1.2.11/include -IC:/Programme/development/codeblocks/include -IC:/Programme/development/lua-5.1.1/lua-5.1.1/src
debug_PROJECT_INCS= -I./x86/main -I../gfx_subsys -I../window_subsys
debug_GLOBAL_LIBDIRS= -LC:/Programme/development/SDL-1.2.11/lib -LC:/Programme/development/codeblocks/lib -LC:/Programme/development/lua-5.1.1/lua-5.1.1/src
debug_PROJECT_LIBDIRS=
debug_GLOBAL_LIBS= C:\Programme\development\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\Lib\GlU32.Lib C:\Programme\development\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\Lib\OpenGL32.Lib
debug_PROJECT_LIBS= -lopengl32 -lglu32 -lgdi32 -luser32 -lkernel32 C:\Programme\Microsoft Platform SDK\Lib\ComCtl32.Lib

### Targets compiler flags
default_CFLAGS= $(default_PROJECT_CFLAGS) $(default_GLOBAL_CFLAGS)
release_CFLAGS= $(release_PROJECT_CFLAGS) -Os -O3 -O2 -O1 -O $(release_GLOBAL_CFLAGS)
debug_CFLAGS= $(debug_PROJECT_CFLAGS) -g $(debug_GLOBAL_CFLAGS)

### Targets linker flags
default_LDFLAGS= $(default_PROJECT_LDFLAGS) $(default_GLOBAL_LDFLAGS)
release_LDFLAGS= $(release_PROJECT_LDFLAGS) -s $(release_GLOBAL_LDFLAGS)
debug_LDFLAGS= $(debug_PROJECT_LDFLAGS) $(debug_GLOBAL_LDFLAGS)

### Targets include directories
default_INCS= $(default_PROJECT_INCS) $(default_GLOBAL_INCS)
release_INCS= $(release_PROJECT_INCS) $(release_GLOBAL_INCS)
debug_INCS= $(debug_PROJECT_INCS) $(debug_GLOBAL_INCS)

### Targets library directories
default_LIBDIRS= $(default_PROJECT_LIBDIRS) $(default_GLOBAL_LIBDIRS)
release_LIBDIRS= $(release_PROJECT_LIBDIRS) $(release_GLOBAL_LIBDIRS)
debug_LIBDIRS= $(debug_PROJECT_LIBDIRS) $(debug_GLOBAL_LIBDIRS)

### Targets libraries
default_LIBS= $(default_PROJECT_LIBS) $(default_GLOBAL_LIBS)
release_LIBS= $(release_PROJECT_LIBS) $(release_GLOBAL_LIBS)
debug_LIBS= $(debug_PROJECT_LIBS) $(debug_GLOBAL_LIBS)

###############################################################################
#         You shouldn't need to modify anything beyond this point             #
###############################################################################

### Resources used in this Makefile
default_RESOURCE=

### Objects used in this Makefile
default_OBJS=.objs/core/main.o .objs/core/mainState.o .objs/core/programState.o .objs/core/splashState.o .objs/core/stateManager.o .objs/gfx_subsys/opengl/loader3DS.o .objs/gfx_subsys/opengl/skybox.o .objs/gfx_subsys/opengl/texture.o .objs/gfx_subsys/opengl/tgaLoader.o .objs/gfx_subsys/opengl/windows/CoreOpenGL.o .objs/gfx_subsys/opengl/windows/Font.o .objs/msc/camera.o .objs/msc/configurator.o .objs/msc/logger.o .objs/msc/mathUtils.o .objs/window_subsys/windows/winClass.o 
default_LINKOBJS=$(default_OBJS)
default_DEPS=.deps/core/main.d .deps/core/mainState.d .deps/core/programState.d .deps/core/splashState.d .deps/core/stateManager.d .deps/gfx_subsys/opengl/loader3DS.d .deps/gfx_subsys/opengl/skybox.d .deps/gfx_subsys/opengl/texture.d .deps/gfx_subsys/opengl/tgaLoader.d .deps/gfx_subsys/opengl/windows/CoreOpenGL.d .deps/gfx_subsys/opengl/windows/Font.d .deps/msc/camera.d .deps/msc/configurator.d .deps/msc/logger.d .deps/msc/mathUtils.d .deps/window_subsys/windows/winClass.d 
release_OBJS=.objs/core/main.o .objs/core/mainState.o .objs/core/programState.o .objs/core/splashState.o .objs/core/stateManager.o .objs/gfx_subsys/opengl/loader3DS.o .objs/gfx_subsys/opengl/skybox.o .objs/gfx_subsys/opengl/texture.o .objs/gfx_subsys/opengl/tgaLoader.o .objs/gfx_subsys/opengl/windows/CoreOpenGL.o .objs/gfx_subsys/opengl/windows/Font.o .objs/msc/camera.o .objs/msc/configurator.o .objs/msc/logger.o .objs/msc/mathUtils.o .objs/window_subsys/windows/winClass.o 
release_LINKOBJS=$(release_OBJS)
release_DEPS=.deps/core/main.d .deps/core/mainState.d .deps/core/programState.d .deps/core/splashState.d .deps/core/stateManager.d .deps/gfx_subsys/opengl/loader3DS.d .deps/gfx_subsys/opengl/skybox.d .deps/gfx_subsys/opengl/texture.d .deps/gfx_subsys/opengl/tgaLoader.d .deps/gfx_subsys/opengl/windows/CoreOpenGL.d .deps/gfx_subsys/opengl/windows/Font.d .deps/msc/camera.d .deps/msc/configurator.d .deps/msc/logger.d .deps/msc/mathUtils.d .deps/window_subsys/windows/winClass.d 
debug_OBJS=.objs/core/main.o .objs/core/mainState.o .objs/core/programState.o .objs/core/splashState.o .objs/core/stateManager.o .objs/gfx_subsys/opengl/loader3DS.o .objs/gfx_subsys/opengl/skybox.o .objs/gfx_subsys/opengl/texture.o .objs/gfx_subsys/opengl/tgaLoader.o .objs/gfx_subsys/opengl/windows/CoreOpenGL.o .objs/gfx_subsys/opengl/windows/Font.o .objs/msc/camera.o .objs/msc/configurator.o .objs/msc/logger.o .objs/msc/mathUtils.o .objs/window_subsys/windows/winClass.o 
debug_LINKOBJS=$(debug_OBJS)
debug_DEPS=.deps/core/main.d .deps/core/mainState.d .deps/core/programState.d .deps/core/splashState.d .deps/core/stateManager.d .deps/gfx_subsys/opengl/loader3DS.d .deps/gfx_subsys/opengl/skybox.d .deps/gfx_subsys/opengl/texture.d .deps/gfx_subsys/opengl/tgaLoader.d .deps/gfx_subsys/opengl/windows/CoreOpenGL.d .deps/gfx_subsys/opengl/windows/Font.d .deps/msc/camera.d .deps/msc/configurator.d .deps/msc/logger.d .deps/msc/mathUtils.d .deps/window_subsys/windows/winClass.d 

### The targets of this project
default_BIN=../../../../output/release/RVCS_vDev
release_BIN=../../../../output/release/RVCS_vRelease
debug_BIN=../../../../output/release/RVCS_vDebug

.PHONY: all all-before all-custom all-after clean clean-custom distclean distclean-custom depend_default default-before default-after depend_release release-before release-after depend_debug debug-before debug-after 

all: all-before default release debug all-after


dist:
	@zip RVCS.cbp.zip RVCS.cbp Makefile main.cpp mainState.cpp mainState.h programState.cpp programState.h splashState.cpp splashState.h stateManager.cpp stateManager.h ..\gfx_subsys\opengl\loader3DS.cpp ..\gfx_subsys\opengl\loader3DS.h ..\gfx_subsys\opengl\skybox.cpp ..\gfx_subsys\opengl\skybox.h ..\gfx_subsys\opengl\texture.cpp ..\gfx_subsys\opengl\texture.h ..\gfx_subsys\opengl\tgaLoader.cpp ..\gfx_subsys\opengl\tgaLoader.h ..\gfx_subsys\opengl\windows\CoreOpenGL.cpp ..\gfx_subsys\opengl\windows\CoreOpenGL.h ..\gfx_subsys\opengl\windows\Font.cpp ..\gfx_subsys\opengl\windows\Font.h ..\msc\camera.cpp ..\msc\camera.h ..\msc\configurator.cpp ..\msc\configurator.h ..\msc\logger.cpp ..\msc\logger.h ..\msc\mathUtils.cpp ..\msc\mathUtils.h ..\window_subsys\windows\menue.rc ..\window_subsys\windows\resource.h ..\window_subsys\windows\winClass.cpp ..\window_subsys\windows\winClass.h 

clean_default:
	@echo Cleaning target "default"...
	@$(RM) $(default_BIN) $(default_OBJS) $(default_RESOURCE) 

distclean_default:
	@echo Dist-cleaning target "default"...
	@$(RM) $(default_BIN) $(default_OBJS) $(default_DEPS) $(default_RESOURCE) 

clean_release:
	@echo Cleaning target "release"...
	@$(RM) $(release_BIN) $(release_OBJS) $(release_RESOURCE) 

distclean_release:
	@echo Dist-cleaning target "release"...
	@$(RM) $(release_BIN) $(release_OBJS) $(release_DEPS) $(release_RESOURCE) 

clean_debug:
	@echo Cleaning target "debug"...
	@$(RM) $(debug_BIN) $(debug_OBJS) $(debug_RESOURCE) 

distclean_debug:
	@echo Dist-cleaning target "debug"...
	@$(RM) $(debug_BIN) $(debug_OBJS) $(debug_DEPS) $(debug_RESOURCE) 

clean: clean_default clean_release clean_debug 

distclean: distclean_default distclean_release distclean_debug 

depend_default_DIRS:
	-@if not exist ".deps\." mkdir ".deps"
	-@if not exist ".deps\core\." mkdir ".deps\core"
	-@if not exist ".deps\gfx_subsys\." mkdir ".deps\gfx_subsys"
	-@if not exist ".deps\gfx_subsys\opengl\." mkdir ".deps\gfx_subsys\opengl"
	-@if not exist ".deps\gfx_subsys\opengl\windows\." mkdir ".deps\gfx_subsys\opengl\windows"
	-@if not exist ".deps\msc\." mkdir ".deps\msc"
	-@if not exist ".deps\window_subsys\." mkdir ".deps\window_subsys"
	-@if not exist ".deps\window_subsys\windows\." mkdir ".deps\window_subsys\windows"

depend_default: depend_default_DIRS $(default_DEPS)

depend_release_DIRS:
	-@if not exist ".deps\." mkdir ".deps"
	-@if not exist ".deps\core\." mkdir ".deps\core"
	-@if not exist ".deps\gfx_subsys\." mkdir ".deps\gfx_subsys"
	-@if not exist ".deps\gfx_subsys\opengl\." mkdir ".deps\gfx_subsys\opengl"
	-@if not exist ".deps\gfx_subsys\opengl\windows\." mkdir ".deps\gfx_subsys\opengl\windows"
	-@if not exist ".deps\msc\." mkdir ".deps\msc"
	-@if not exist ".deps\window_subsys\." mkdir ".deps\window_subsys"
	-@if not exist ".deps\window_subsys\windows\." mkdir ".deps\window_subsys\windows"

depend_release: depend_release_DIRS $(release_DEPS)

depend_debug_DIRS:
	-@if not exist ".deps\." mkdir ".deps"
	-@if not exist ".deps\core\." mkdir ".deps\core"
	-@if not exist ".deps\gfx_subsys\." mkdir ".deps\gfx_subsys"
	-@if not exist ".deps\gfx_subsys\opengl\." mkdir ".deps\gfx_subsys\opengl"
	-@if not exist ".deps\gfx_subsys\opengl\windows\." mkdir ".deps\gfx_subsys\opengl\windows"
	-@if not exist ".deps\msc\." mkdir ".deps\msc"
	-@if not exist ".deps\window_subsys\." mkdir ".deps\window_subsys"
	-@if not exist ".deps\window_subsys\windows\." mkdir ".deps\window_subsys\windows"

depend_debug: depend_debug_DIRS $(debug_DEPS)

depend: depend_default depend_release depend_debug

default_DIRS:
	-@if not exist ".objs\." mkdir ".objs"
	-@if not exist ".objs\core\." mkdir ".objs\core"
	-@if not exist ".objs\gfx_subsys\." mkdir ".objs\gfx_subsys"
	-@if not exist ".objs\gfx_subsys\opengl\." mkdir ".objs\gfx_subsys\opengl"
	-@if not exist ".objs\gfx_subsys\opengl\windows\." mkdir ".objs\gfx_subsys\opengl\windows"
	-@if not exist ".objs\msc\." mkdir ".objs\msc"
	-@if not exist ".objs\window_subsys\." mkdir ".objs\window_subsys"
	-@if not exist ".objs\window_subsys\windows\." mkdir ".objs\window_subsys\windows"
	-@if not exist "..\." mkdir ".."
	-@if not exist "..\..\." mkdir "..\.."
	-@if not exist "..\..\..\." mkdir "..\..\.."
	-@if not exist "..\..\..\..\." mkdir "..\..\..\.."
	-@if not exist "..\..\..\..\output\." mkdir "..\..\..\..\output"
	-@if not exist "..\..\..\..\output\release\." mkdir "..\..\..\..\output\release"

default: depend_default default_DIRS default-before $(default_BIN) default-after

$(default_BIN): $(default_LINKOBJS) $(default_RESOURCE)
	@echo Linking executable "..\..\..\..\output\release\RVCS_vDev"...
	@$(default_LD) $(default_LIBDIRS) -o $(default_BIN) $(default_LINKOBJS) $(default_RESOURCE) $(default_LDFLAGS) $(default_LIBS)

release_DIRS:
	-@if not exist ".objs\." mkdir ".objs"
	-@if not exist ".objs\core\." mkdir ".objs\core"
	-@if not exist ".objs\gfx_subsys\." mkdir ".objs\gfx_subsys"
	-@if not exist ".objs\gfx_subsys\opengl\." mkdir ".objs\gfx_subsys\opengl"
	-@if not exist ".objs\gfx_subsys\opengl\windows\." mkdir ".objs\gfx_subsys\opengl\windows"
	-@if not exist ".objs\msc\." mkdir ".objs\msc"
	-@if not exist ".objs\window_subsys\." mkdir ".objs\window_subsys"
	-@if not exist ".objs\window_subsys\windows\." mkdir ".objs\window_subsys\windows"
	-@if not exist "..\." mkdir ".."
	-@if not exist "..\..\." mkdir "..\.."
	-@if not exist "..\..\..\." mkdir "..\..\.."
	-@if not exist "..\..\..\..\." mkdir "..\..\..\.."
	-@if not exist "..\..\..\..\output\." mkdir "..\..\..\..\output"
	-@if not exist "..\..\..\..\output\release\." mkdir "..\..\..\..\output\release"

release: depend_release release_DIRS release-before $(release_BIN) release-after

$(release_BIN): $(release_LINKOBJS) $(release_RESOURCE)
	@echo Linking executable "..\..\..\..\output\release\RVCS_vRelease"...
	@$(release_LD) $(release_LIBDIRS) -o $(release_BIN) $(release_LINKOBJS) $(release_RESOURCE) $(release_LDFLAGS) $(release_LIBS) -mwindows

debug_DIRS:
	-@if not exist ".objs\." mkdir ".objs"
	-@if not exist ".objs\core\." mkdir ".objs\core"
	-@if not exist ".objs\gfx_subsys\." mkdir ".objs\gfx_subsys"
	-@if not exist ".objs\gfx_subsys\opengl\." mkdir ".objs\gfx_subsys\opengl"
	-@if not exist ".objs\gfx_subsys\opengl\windows\." mkdir ".objs\gfx_subsys\opengl\windows"
	-@if not exist ".objs\msc\." mkdir ".objs\msc"
	-@if not exist ".objs\window_subsys\." mkdir ".objs\window_subsys"
	-@if not exist ".objs\window_subsys\windows\." mkdir ".objs\window_subsys\windows"
	-@if not exist "..\." mkdir ".."
	-@if not exist "..\..\." mkdir "..\.."
	-@if not exist "..\..\..\." mkdir "..\..\.."
	-@if not exist "..\..\..\..\." mkdir "..\..\..\.."
	-@if not exist "..\..\..\..\output\." mkdir "..\..\..\..\output"
	-@if not exist "..\..\..\..\output\release\." mkdir "..\..\..\..\output\release"

debug: depend_debug debug_DIRS debug-before $(debug_BIN) debug-after

$(debug_BIN): $(debug_LINKOBJS) $(debug_RESOURCE)
	@echo Linking executable "..\..\..\..\output\release\RVCS_vDebug"...
	@$(debug_LD) $(debug_LIBDIRS) -o $(debug_BIN) $(debug_LINKOBJS) $(debug_RESOURCE) $(debug_LDFLAGS) $(debug_LIBS) -mwindows


.deps/core/main.d: main.cpp
	@echo Calculating dependencies for "main.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/core/main.d -MT .objs/core/main.o,.objs/core/main.o,.objs/core/main.o $(default_INCS) main.cpp

.objs/core/main.o: .deps/core/main.d
	@echo Compiling "main.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c main.cpp -o .objs/core/main.o

.deps/core/mainState.d: mainState.cpp
	@echo Calculating dependencies for "mainState.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/core/mainState.d -MT .objs/core/mainState.o,.objs/core/mainState.o,.objs/core/mainState.o $(default_INCS) mainState.cpp

.objs/core/mainState.o: .deps/core/mainState.d
	@echo Compiling "mainState.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c mainState.cpp -o .objs/core/mainState.o

.deps/core/programState.d: programState.cpp
	@echo Calculating dependencies for "programState.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/core/programState.d -MT .objs/core/programState.o,.objs/core/programState.o,.objs/core/programState.o $(default_INCS) programState.cpp

.objs/core/programState.o: .deps/core/programState.d
	@echo Compiling "programState.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c programState.cpp -o .objs/core/programState.o

.deps/core/splashState.d: splashState.cpp
	@echo Calculating dependencies for "splashState.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/core/splashState.d -MT .objs/core/splashState.o,.objs/core/splashState.o,.objs/core/splashState.o $(default_INCS) splashState.cpp

.objs/core/splashState.o: .deps/core/splashState.d
	@echo Compiling "splashState.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c splashState.cpp -o .objs/core/splashState.o

.deps/core/stateManager.d: stateManager.cpp
	@echo Calculating dependencies for "stateManager.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/core/stateManager.d -MT .objs/core/stateManager.o,.objs/core/stateManager.o,.objs/core/stateManager.o $(default_INCS) stateManager.cpp

.objs/core/stateManager.o: .deps/core/stateManager.d
	@echo Compiling "stateManager.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c stateManager.cpp -o .objs/core/stateManager.o

.deps/gfx_subsys/opengl/loader3DS.d: ../gfx_subsys/opengl/loader3DS.cpp
	@echo Calculating dependencies for "..\gfx_subsys\opengl\loader3DS.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/gfx_subsys/opengl/loader3DS.d -MT .objs/gfx_subsys/opengl/loader3DS.o,.objs/gfx_subsys/opengl/loader3DS.o,.objs/gfx_subsys/opengl/loader3DS.o $(default_INCS) ../gfx_subsys/opengl/loader3DS.cpp

.objs/gfx_subsys/opengl/loader3DS.o: .deps/gfx_subsys/opengl/loader3DS.d
	@echo Compiling "..\gfx_subsys\opengl\loader3DS.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ../gfx_subsys/opengl/loader3DS.cpp -o .objs/gfx_subsys/opengl/loader3DS.o

.deps/gfx_subsys/opengl/skybox.d: ../gfx_subsys/opengl/skybox.cpp
	@echo Calculating dependencies for "..\gfx_subsys\opengl\skybox.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/gfx_subsys/opengl/skybox.d -MT .objs/gfx_subsys/opengl/skybox.o,.objs/gfx_subsys/opengl/skybox.o,.objs/gfx_subsys/opengl/skybox.o $(default_INCS) ../gfx_subsys/opengl/skybox.cpp

.objs/gfx_subsys/opengl/skybox.o: .deps/gfx_subsys/opengl/skybox.d
	@echo Compiling "..\gfx_subsys\opengl\skybox.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ../gfx_subsys/opengl/skybox.cpp -o .objs/gfx_subsys/opengl/skybox.o

.deps/gfx_subsys/opengl/texture.d: ../gfx_subsys/opengl/texture.cpp
	@echo Calculating dependencies for "..\gfx_subsys\opengl\texture.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/gfx_subsys/opengl/texture.d -MT .objs/gfx_subsys/opengl/texture.o,.objs/gfx_subsys/opengl/texture.o,.objs/gfx_subsys/opengl/texture.o $(default_INCS) ../gfx_subsys/opengl/texture.cpp

.objs/gfx_subsys/opengl/texture.o: .deps/gfx_subsys/opengl/texture.d
	@echo Compiling "..\gfx_subsys\opengl\texture.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ../gfx_subsys/opengl/texture.cpp -o .objs/gfx_subsys/opengl/texture.o

.deps/gfx_subsys/opengl/tgaLoader.d: ../gfx_subsys/opengl/tgaLoader.cpp
	@echo Calculating dependencies for "..\gfx_subsys\opengl\tgaLoader.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/gfx_subsys/opengl/tgaLoader.d -MT .objs/gfx_subsys/opengl/tgaLoader.o,.objs/gfx_subsys/opengl/tgaLoader.o,.objs/gfx_subsys/opengl/tgaLoader.o $(default_INCS) ../gfx_subsys/opengl/tgaLoader.cpp

.objs/gfx_subsys/opengl/tgaLoader.o: .deps/gfx_subsys/opengl/tgaLoader.d
	@echo Compiling "..\gfx_subsys\opengl\tgaLoader.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ../gfx_subsys/opengl/tgaLoader.cpp -o .objs/gfx_subsys/opengl/tgaLoader.o

.deps/gfx_subsys/opengl/windows/CoreOpenGL.d: ../gfx_subsys/opengl/windows/CoreOpenGL.cpp
	@echo Calculating dependencies for "..\gfx_subsys\opengl\windows\CoreOpenGL.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/gfx_subsys/opengl/windows/CoreOpenGL.d -MT .objs/gfx_subsys/opengl/windows/CoreOpenGL.o,.objs/gfx_subsys/opengl/windows/CoreOpenGL.o,.objs/gfx_subsys/opengl/windows/CoreOpenGL.o $(default_INCS) ../gfx_subsys/opengl/windows/CoreOpenGL.cpp

.objs/gfx_subsys/opengl/windows/CoreOpenGL.o: .deps/gfx_subsys/opengl/windows/CoreOpenGL.d
	@echo Compiling "..\gfx_subsys\opengl\windows\CoreOpenGL.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ../gfx_subsys/opengl/windows/CoreOpenGL.cpp -o .objs/gfx_subsys/opengl/windows/CoreOpenGL.o

.deps/gfx_subsys/opengl/windows/Font.d: ../gfx_subsys/opengl/windows/Font.cpp
	@echo Calculating dependencies for "..\gfx_subsys\opengl\windows\Font.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/gfx_subsys/opengl/windows/Font.d -MT .objs/gfx_subsys/opengl/windows/Font.o,.objs/gfx_subsys/opengl/windows/Font.o,.objs/gfx_subsys/opengl/windows/Font.o $(default_INCS) ../gfx_subsys/opengl/windows/Font.cpp

.objs/gfx_subsys/opengl/windows/Font.o: .deps/gfx_subsys/opengl/windows/Font.d
	@echo Compiling "..\gfx_subsys\opengl\windows\Font.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ../gfx_subsys/opengl/windows/Font.cpp -o .objs/gfx_subsys/opengl/windows/Font.o

.deps/msc/camera.d: ../msc/camera.cpp
	@echo Calculating dependencies for "..\msc\camera.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/msc/camera.d -MT .objs/msc/camera.o,.objs/msc/camera.o,.objs/msc/camera.o $(default_INCS) ../msc/camera.cpp

.objs/msc/camera.o: .deps/msc/camera.d
	@echo Compiling "..\msc\camera.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ../msc/camera.cpp -o .objs/msc/camera.o

.deps/msc/configurator.d: ../msc/configurator.cpp
	@echo Calculating dependencies for "..\msc\configurator.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/msc/configurator.d -MT .objs/msc/configurator.o,.objs/msc/configurator.o,.objs/msc/configurator.o $(default_INCS) ../msc/configurator.cpp

.objs/msc/configurator.o: .deps/msc/configurator.d
	@echo Compiling "..\msc\configurator.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ../msc/configurator.cpp -o .objs/msc/configurator.o

.deps/msc/logger.d: ../msc/logger.cpp
	@echo Calculating dependencies for "..\msc\logger.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/msc/logger.d -MT .objs/msc/logger.o,.objs/msc/logger.o,.objs/msc/logger.o $(default_INCS) ../msc/logger.cpp

.objs/msc/logger.o: .deps/msc/logger.d
	@echo Compiling "..\msc\logger.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ../msc/logger.cpp -o .objs/msc/logger.o

.deps/msc/mathUtils.d: ../msc/mathUtils.cpp
	@echo Calculating dependencies for "..\msc\mathUtils.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/msc/mathUtils.d -MT .objs/msc/mathUtils.o,.objs/msc/mathUtils.o,.objs/msc/mathUtils.o $(default_INCS) ../msc/mathUtils.cpp

.objs/msc/mathUtils.o: .deps/msc/mathUtils.d
	@echo Compiling "..\msc\mathUtils.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ../msc/mathUtils.cpp -o .objs/msc/mathUtils.o

.deps/window_subsys/windows/winClass.d: ../window_subsys/windows/winClass.cpp
	@echo Calculating dependencies for "..\window_subsys\windows\winClass.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/window_subsys/windows/winClass.d -MT .objs/window_subsys/windows/winClass.o,.objs/window_subsys/windows/winClass.o,.objs/window_subsys/windows/winClass.o $(default_INCS) ../window_subsys/windows/winClass.cpp

.objs/window_subsys/windows/winClass.o: .deps/window_subsys/windows/winClass.d
	@echo Compiling "..\window_subsys\windows\winClass.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ../window_subsys/windows/winClass.cpp -o .objs/window_subsys/windows/winClass.o

$(default_RESOURCE): ../window_subsys/windows/menue.rc 
	@echo Compiling resources...
	@$(default_RESCOMP) -i default_private.rc -J rc -o $(default_RESOURCE) -O coff 


.objs/core/main.o: main.cpp
	@echo Compiling "main.cpp"...
	@$(release_CPP) $(release_CFLAGS) $(release_INCS) -c main.cpp -o .objs/core/main.o

.objs/core/mainState.o: mainState.cpp
	@echo Compiling "mainState.cpp"...
	@$(release_CPP) $(release_CFLAGS) $(release_INCS) -c mainState.cpp -o .objs/core/mainState.o

.objs/core/programState.o: programState.cpp
	@echo Compiling "programState.cpp"...
	@$(release_CPP) $(release_CFLAGS) $(release_INCS) -c programState.cpp -o .objs/core/programState.o

.objs/core/splashState.o: splashState.cpp
	@echo Compiling "splashState.cpp"...
	@$(release_CPP) $(release_CFLAGS) $(release_INCS) -c splashState.cpp -o .objs/core/splashState.o

.objs/core/stateManager.o: stateManager.cpp
	@echo Compiling "stateManager.cpp"...
	@$(release_CPP) $(release_CFLAGS) $(release_INCS) -c stateManager.cpp -o .objs/core/stateManager.o

.objs/gfx_subsys/opengl/loader3DS.o: ..\gfx_subsys\opengl\loader3DS.cpp
	@echo Compiling "..\gfx_subsys\opengl\loader3DS.cpp"...
	@$(release_CPP) $(release_CFLAGS) $(release_INCS) -c ../gfx_subsys/opengl/loader3DS.cpp -o .objs/gfx_subsys/opengl/loader3DS.o

.objs/gfx_subsys/opengl/skybox.o: ..\gfx_subsys\opengl\skybox.cpp
	@echo Compiling "..\gfx_subsys\opengl\skybox.cpp"...
	@$(release_CPP) $(release_CFLAGS) $(release_INCS) -c ../gfx_subsys/opengl/skybox.cpp -o .objs/gfx_subsys/opengl/skybox.o

.objs/gfx_subsys/opengl/texture.o: ..\gfx_subsys\opengl\texture.cpp
	@echo Compiling "..\gfx_subsys\opengl\texture.cpp"...
	@$(release_CPP) $(release_CFLAGS) $(release_INCS) -c ../gfx_subsys/opengl/texture.cpp -o .objs/gfx_subsys/opengl/texture.o

.objs/gfx_subsys/opengl/tgaLoader.o: ..\gfx_subsys\opengl\tgaLoader.cpp
	@echo Compiling "..\gfx_subsys\opengl\tgaLoader.cpp"...
	@$(release_CPP) $(release_CFLAGS) $(release_INCS) -c ../gfx_subsys/opengl/tgaLoader.cpp -o .objs/gfx_subsys/opengl/tgaLoader.o

.objs/gfx_subsys/opengl/windows/CoreOpenGL.o: ..\gfx_subsys\opengl\windows\CoreOpenGL.cpp
	@echo Compiling "..\gfx_subsys\opengl\windows\CoreOpenGL.cpp"...
	@$(release_CPP) $(release_CFLAGS) $(release_INCS) -c ../gfx_subsys/opengl/windows/CoreOpenGL.cpp -o .objs/gfx_subsys/opengl/windows/CoreOpenGL.o

.objs/gfx_subsys/opengl/windows/Font.o: ..\gfx_subsys\opengl\windows\Font.cpp
	@echo Compiling "..\gfx_subsys\opengl\windows\Font.cpp"...
	@$(release_CPP) $(release_CFLAGS) $(release_INCS) -c ../gfx_subsys/opengl/windows/Font.cpp -o .objs/gfx_subsys/opengl/windows/Font.o

.objs/msc/camera.o: ..\msc\camera.cpp
	@echo Compiling "..\msc\camera.cpp"...
	@$(release_CPP) $(release_CFLAGS) $(release_INCS) -c ../msc/camera.cpp -o .objs/msc/camera.o

.objs/msc/configurator.o: ..\msc\configurator.cpp
	@echo Compiling "..\msc\configurator.cpp"...
	@$(release_CPP) $(release_CFLAGS) $(release_INCS) -c ../msc/configurator.cpp -o .objs/msc/configurator.o

.objs/msc/logger.o: ..\msc\logger.cpp
	@echo Compiling "..\msc\logger.cpp"...
	@$(release_CPP) $(release_CFLAGS) $(release_INCS) -c ../msc/logger.cpp -o .objs/msc/logger.o

.objs/msc/mathUtils.o: ..\msc\mathUtils.cpp
	@echo Compiling "..\msc\mathUtils.cpp"...
	@$(release_CPP) $(release_CFLAGS) $(release_INCS) -c ../msc/mathUtils.cpp -o .objs/msc/mathUtils.o

.objs/window_subsys/windows/winClass.o: ..\window_subsys\windows\winClass.cpp
	@echo Compiling "..\window_subsys\windows\winClass.cpp"...
	@$(release_CPP) $(release_CFLAGS) $(release_INCS) -c ../window_subsys/windows/winClass.cpp -o .objs/window_subsys/windows/winClass.o

$(release_RESOURCE): ../window_subsys/windows/menue.rc 
	@echo Compiling resources...
	@$(release_RESCOMP) -i release_private.rc -J rc -o $(release_RESOURCE) -O coff 


.objs/core/main.o: main.cpp
	@echo Compiling "main.cpp"...
	@$(debug_CPP) $(debug_CFLAGS) $(debug_INCS) -c main.cpp -o .objs/core/main.o

.objs/core/mainState.o: mainState.cpp
	@echo Compiling "mainState.cpp"...
	@$(debug_CPP) $(debug_CFLAGS) $(debug_INCS) -c mainState.cpp -o .objs/core/mainState.o

.objs/core/programState.o: programState.cpp
	@echo Compiling "programState.cpp"...
	@$(debug_CPP) $(debug_CFLAGS) $(debug_INCS) -c programState.cpp -o .objs/core/programState.o

.objs/core/splashState.o: splashState.cpp
	@echo Compiling "splashState.cpp"...
	@$(debug_CPP) $(debug_CFLAGS) $(debug_INCS) -c splashState.cpp -o .objs/core/splashState.o

.objs/core/stateManager.o: stateManager.cpp
	@echo Compiling "stateManager.cpp"...
	@$(debug_CPP) $(debug_CFLAGS) $(debug_INCS) -c stateManager.cpp -o .objs/core/stateManager.o

.objs/gfx_subsys/opengl/loader3DS.o: ..\gfx_subsys\opengl\loader3DS.cpp
	@echo Compiling "..\gfx_subsys\opengl\loader3DS.cpp"...
	@$(debug_CPP) $(debug_CFLAGS) $(debug_INCS) -c ../gfx_subsys/opengl/loader3DS.cpp -o .objs/gfx_subsys/opengl/loader3DS.o

.objs/gfx_subsys/opengl/skybox.o: ..\gfx_subsys\opengl\skybox.cpp
	@echo Compiling "..\gfx_subsys\opengl\skybox.cpp"...
	@$(debug_CPP) $(debug_CFLAGS) $(debug_INCS) -c ../gfx_subsys/opengl/skybox.cpp -o .objs/gfx_subsys/opengl/skybox.o

.objs/gfx_subsys/opengl/texture.o: ..\gfx_subsys\opengl\texture.cpp
	@echo Compiling "..\gfx_subsys\opengl\texture.cpp"...
	@$(debug_CPP) $(debug_CFLAGS) $(debug_INCS) -c ../gfx_subsys/opengl/texture.cpp -o .objs/gfx_subsys/opengl/texture.o

.objs/gfx_subsys/opengl/tgaLoader.o: ..\gfx_subsys\opengl\tgaLoader.cpp
	@echo Compiling "..\gfx_subsys\opengl\tgaLoader.cpp"...
	@$(debug_CPP) $(debug_CFLAGS) $(debug_INCS) -c ../gfx_subsys/opengl/tgaLoader.cpp -o .objs/gfx_subsys/opengl/tgaLoader.o

.objs/gfx_subsys/opengl/windows/CoreOpenGL.o: ..\gfx_subsys\opengl\windows\CoreOpenGL.cpp
	@echo Compiling "..\gfx_subsys\opengl\windows\CoreOpenGL.cpp"...
	@$(debug_CPP) $(debug_CFLAGS) $(debug_INCS) -c ../gfx_subsys/opengl/windows/CoreOpenGL.cpp -o .objs/gfx_subsys/opengl/windows/CoreOpenGL.o

.objs/gfx_subsys/opengl/windows/Font.o: ..\gfx_subsys\opengl\windows\Font.cpp
	@echo Compiling "..\gfx_subsys\opengl\windows\Font.cpp"...
	@$(debug_CPP) $(debug_CFLAGS) $(debug_INCS) -c ../gfx_subsys/opengl/windows/Font.cpp -o .objs/gfx_subsys/opengl/windows/Font.o

.objs/msc/camera.o: ..\msc\camera.cpp
	@echo Compiling "..\msc\camera.cpp"...
	@$(debug_CPP) $(debug_CFLAGS) $(debug_INCS) -c ../msc/camera.cpp -o .objs/msc/camera.o

.objs/msc/configurator.o: ..\msc\configurator.cpp
	@echo Compiling "..\msc\configurator.cpp"...
	@$(debug_CPP) $(debug_CFLAGS) $(debug_INCS) -c ../msc/configurator.cpp -o .objs/msc/configurator.o

.objs/msc/logger.o: ..\msc\logger.cpp
	@echo Compiling "..\msc\logger.cpp"...
	@$(debug_CPP) $(debug_CFLAGS) $(debug_INCS) -c ../msc/logger.cpp -o .objs/msc/logger.o

.objs/msc/mathUtils.o: ..\msc\mathUtils.cpp
	@echo Compiling "..\msc\mathUtils.cpp"...
	@$(debug_CPP) $(debug_CFLAGS) $(debug_INCS) -c ../msc/mathUtils.cpp -o .objs/msc/mathUtils.o

.objs/window_subsys/windows/winClass.o: ..\window_subsys\windows\winClass.cpp
	@echo Compiling "..\window_subsys\windows\winClass.cpp"...
	@$(debug_CPP) $(debug_CFLAGS) $(debug_INCS) -c ../window_subsys/windows/winClass.cpp -o .objs/window_subsys/windows/winClass.o

$(debug_RESOURCE): ../window_subsys/windows/menue.rc 
	@echo Compiling resources...
	@$(debug_RESCOMP) -i debug_private.rc -J rc -o $(debug_RESOURCE) -O coff 



